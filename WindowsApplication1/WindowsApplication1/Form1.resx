<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>